GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 0) [INIT]
	(1, 2): Rrlx (b, 0) [INIT]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 1) [(1, 4)]
	(2, 2): Wrlx (a, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 1) [(1, 3)]
	(3, 2): Wrlx (b, 1)
	(3, 3): THREAD_END

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 0) [INIT]
	(1, 2): Rrlx (b, 1) [(3, 2)]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 1) [(1, 4)]
	(2, 2): Wrlx (a, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 1) [(1, 3)]
	(3, 2): Wrlx (b, 1)
	(3, 3): THREAD_END

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 1) [(2, 2)]
	(1, 2): Rrlx (b, 1) [(3, 2)]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 1) [(1, 4)]
	(2, 2): Wrlx (a, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 1) [(1, 3)]
	(3, 2): Wrlx (b, 1)
	(3, 3): THREAD_END

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 1) [(2, 2)]
	(1, 2): Rrlx (b, 0) [INIT]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 1) [(1, 4)]
	(2, 2): Wrlx (a, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 1) [(1, 3)]
	(3, 2): Wrlx (b, 1)
	(3, 3): THREAD_END

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 1) [(2, 2)]
	(1, 2): Rrlx (b, 0) [INIT]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 1) [(1, 4)]
	(2, 2): Wrlx (a, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 0) [INIT]
	(3, 2): THREAD_END

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 0) [INIT]
	(1, 2): Rrlx (b, 0) [INIT]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 1) [(1, 4)]
	(2, 2): Wrlx (a, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 0) [INIT]
	(3, 2): THREAD_END

XMM HB PREDS Execution Graph
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 0) [INIT]
	(1, 2): Rrlx (b, 0) [INIT]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 0) [INIT]
	(2, 2): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 1) [(1, 3)]
	(3, 2): Wrlx (b, 1)
	(3, 3): THREAD_END

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 0) [INIT]
	(1, 2): Rrlx (b, 1) [(3, 2)]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 0) [INIT]
	(2, 2): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 1) [(1, 3)]
	(3, 2): Wrlx (b, 1)
	(3, 3): THREAD_END

XMM HB PREDS Execution Graph
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (a, 0) [INIT]
	(1, 2): Rrlx (b, 0) [INIT]
	(1, 3): Wrlx (c, 1)
	(1, 4): Wrlx (d, 1)
	(1, 5): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (d, 0) [INIT]
	(2, 2): THREAD_END
<0, 3> thread_three:
	(3, 1): Rrlx (c, 0) [INIT]
	(3, 2): THREAD_END

No errors were detected.
Number of complete executions explored: 9
Number of duplicate executions explored: 16
Number of load buffering races explored: 7
Total wall-clock time: 0.13s
