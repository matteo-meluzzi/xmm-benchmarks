GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 1) [(2, 2)]
	(3, 2): Rrlx (x, 1) [(2, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (1, 2): Wrlx (GU#0, 2) (2, 2): Wrlx (GU#0, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 2) [(1, 2)]
	(3, 2): Rrlx (x, 1) [(2, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (1, 2): Wrlx (GU#0, 2) (2, 2): Wrlx (GU#0, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 2) [(1, 2)]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (1, 2): Wrlx (GU#0, 2) (2, 2): Wrlx (GU#0, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 1) [(2, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (1, 2): Wrlx (GU#0, 2) (2, 2): Wrlx (GU#0, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (1, 2): Wrlx (GU#0, 2) (2, 2): Wrlx (GU#0, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 0) [INIT]
	(3, 3): THREAD_END
Coherence:
x: [ (1, 2): Wrlx (GU#0, 2) (2, 2): Wrlx (GU#0, 1) ]

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 2) [(1, 2)]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

XMM HB PREDS Execution Graph
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 1) [(2, 2)]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

XMM HB PREDS Execution Graph
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 1) [(2, 2)]
	(3, 2): Rrlx (x, 1) [(2, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

XMM HB PREDS Execution Graph
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

XMM HB PREDS Execution Graph
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 1) [(2, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

XMM HB PREDS Execution Graph
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 0) [INIT]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 2) [(1, 2)]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 1) [(2, 2)]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 1) [(2, 2)]
	(3, 2): Rrlx (x, 1) [(2, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 1) [(2, 2)]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 1) [(1, 3)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 0) [INIT]
	(3, 3): THREAD_END
Coherence:
x: [ (2, 2): Wrlx (GU#0, 1) (1, 2): Wrlx (GU#0, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 0) [INIT]
	(2, 2): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 2) [(1, 2)]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 0) [INIT]
	(2, 2): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 2) [(1, 2)]
	(3, 3): THREAD_END

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_1:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (x, 2)
	(1, 3): Wrlx (y, 1)
	(1, 4): THREAD_END
<0, 2> thread_2:
	(2, 1): Rrlx (y, 0) [INIT]
	(2, 2): THREAD_END
<0, 3> thread_3:
	(3, 1): Rrlx (x, 0) [INIT]
	(3, 2): Rrlx (x, 0) [INIT]
	(3, 3): THREAD_END

No errors were detected.
Number of complete executions explored: 21
Number of duplicate executions explored: 1
Total wall-clock time: 0.10s
