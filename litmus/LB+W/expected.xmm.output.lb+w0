GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 1) [(1, 2)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (3, 1): Wrlx (GU#8, 2) (1, 2): Wrlx (GU#8, 1) ]

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 1) [(1, 2)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (3, 1): Wrlx (GU#8, 2) (1, 2): Wrlx (GU#8, 1) ]

XMM Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 1) [(1, 2)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (1, 2): Wrlx (GU#8, 1) (3, 1): Wrlx (GU#8, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 2) [(3, 1)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (3, 1): Wrlx (GU#8, 2) (1, 2): Wrlx (GU#8, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 2) [(3, 1)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (3, 1): Wrlx (GU#8, 2) (1, 2): Wrlx (GU#8, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 2) [(3, 1)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (1, 2): Wrlx (GU#8, 1) (3, 1): Wrlx (GU#8, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 0) [INIT]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (3, 1): Wrlx (GU#8, 2) (1, 2): Wrlx (GU#8, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 0) [INIT]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (3, 1): Wrlx (GU#8, 2) (1, 2): Wrlx (GU#8, 1) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 1) [(2, 2)]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 0) [INIT]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (1, 2): Wrlx (GU#8, 1) (3, 1): Wrlx (GU#8, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 2) [(3, 1)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (1, 2): Wrlx (GU#8, 1) (3, 1): Wrlx (GU#8, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 1) [(1, 2)]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (1, 2): Wrlx (GU#8, 1) (3, 1): Wrlx (GU#8, 2) ]

GenMC Execution Graph:
<-1, 0> main:
	(0, 1): THREAD_CREATE [thread 1]
	(0, 2): THREAD_CREATE [thread 2]
	(0, 3): THREAD_CREATE [thread 3]
	(0, 4): THREAD_END
<0, 1> thread_one:
	(1, 1): Rrlx (x, 0) [INIT]
	(1, 2): Wrlx (y, 1)
	(1, 3): THREAD_END
<0, 2> thread_two:
	(2, 1): Rrlx (y, 0) [INIT]
	(2, 2): Wrlx (x, 1)
	(2, 3): THREAD_END
<0, 3> thread_three:
	(3, 1): Wrlx (y, 2)
	(3, 2): THREAD_END
Coherence:
y: [ (1, 2): Wrlx (GU#8, 1) (3, 1): Wrlx (GU#8, 2) ]

No errors were detected.
Number of complete executions explored: 12
Number of duplicate executions explored: 4
Total wall-clock time: 0.12s
